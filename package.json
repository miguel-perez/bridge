{
  "name": "bridge",
  "version": "0.1.0",
  "description": "MCP server for capturing and analyzing experiential data",
  "main": "dist/index.js",
  "type": "module",
  "bin": {
    "bridge": "./dist/index.js"
  },
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "build": "tsc",
    "build:all": "npm run build && npm run generate:manifest && npm run bundle",
    "bundle": "esbuild src/index.ts --bundle --platform=node --outfile=dist/bundle.js --format=esm --external:node:*",
    "start": "node dist/bundle.js",
    "generate:manifest": "tsx src/scripts/generate-manifest.ts",
    "test": "jest --coverage",
    "test:all": "npm test",
    "quality-check": "npm run lint && npm run type-check && npm test",
    "quality-check:full": "npm run lint && npm run type-check && npm test",
    "lint": "eslint src/**/*.ts --ext .ts",
    "lint:fix": "eslint src/**/*.ts --ext .ts --fix",
    "type-check": "tsc --noEmit",
    "prepare": "husky install"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{md,json}": [
      "prettier --write"
    ]
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "experience",
    "capture",
    "reflection"
  ],
  "dependencies": {
    "@modelcontextprotocol/sdk": "latest",
    "@xenova/transformers": "^2.17.2",
    "dotenv": "^17.1.0",
    "nanoid": "^5.1.5",
    "openai": "^4.28.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "@types/node": "^20.11.24",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^7.1.0",
    "@typescript-eslint/parser": "^7.1.0",
    "esbuild": "^0.17.19",
    "eslint": "^8.57.0",
    "eslint-plugin-jsdoc": "^51.4.1",
    "eslint-plugin-tsdoc": "^0.4.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^16.1.2",
    "markdownlint-cli2": "^0.18.1",
    "prettier": "^3.2.5",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "tsc-watch": "^6.0.4",
    "tsx": "^4.20.3",
    "typescript": "^5.3.3",
    "uuid": "^11.1.0"
  }
}
