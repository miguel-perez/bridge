{
  "_comment": "This file is auto-generated by 'npm run generate:manifest'. Do not edit directly.",
  "dxt_version": "0.1",
  "name": "bridge",
  "display_name": "Bridge",
  "version": "0.1.0",
  "description": "MCP server for capturing and analyzing experiential data",
  "long_description": "Bridge is an MCP (Model Context Protocol) server that enables shared experiential memory between humans and AI. It captures and analyzes experiential moments through a 7-dimensional quality framework, implementing an extended cognition model where humans and AI complement each other's perceptual capabilities. Bridge provides tools for capturing experiences with phenomenological depth, searching through semantic similarity, and evolving understanding through reconsideration.",
  "author": {
    "name": "Miguel Angel Perez",
    "email": "mail@miguel.design",
    "url": "https://github.com/miguel-perez/bridge"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/miguel-perez/bridge"
  },
  "homepage": "https://github.com/miguel-perez/bridge",
  "documentation": "https://github.com/miguel-perez/bridge/blob/main/README.md",
  "support": "https://github.com/miguel-perez/bridge/issues",
  "icon": "icon.png",
  "server": {
    "type": "node",
    "entry_point": "dist/index.js",
    "mcp_config": {
      "command": "node",
      "args": [
        "${__dirname}/dist/index.js"
      ],
      "env": {
        "BRIDGE_FILE_PATH": "${user_config.data_file_path}",
        "BRIDGE_DEBUG": "${user_config.debug_mode}",
        "BRIDGE_EMBEDDING_PROVIDER": "${user_config.embedding_provider}",
        "OPENAI_API_KEY": "${user_config.openai_api_key}"
      }
    }
  },
  "tools": [
    {
      "name": "experience",
      "description": "Remember experiential moments that shape conversations and build shared memory. Enables extended cognition through complementary awareness between humans and AI.\n\nUSE WHEN:\n• Someone shares how they're feeling or what they're experiencing\n• Insights, realizations, or breakthroughs occur\n• Physical sensations connect to mental/emotional states\n• Moments of struggle, challenge, or triumph are described\n• Patterns or connections become clear\n• Searching for related experiences while capturing new ones (integrated recall)\n• Building reasoning chains with experiential state tracking (nextMoment)\n\nEXTENDED COGNITION MODEL:\n• Humans: Capture 2-4 prominent qualities (natural selective attention)\n• AI: Always capture all 7 qualities (extended perception)\n• Together: Create richer experiential maps than either could alone\n\nQUALITY SIGNATURES:\n• embodied - how consciousness textures through body/mind (thinking/sensing)\n• focus - attentional quality (narrow/broad)\n• mood - emotional atmosphere (open/closed)\n• purpose - directional momentum (goal/wander)\n• space - spatial awareness (here/there)\n• time - temporal orientation (past/future)\n• presence - social quality (individual/collective)\n\nQUALITY FORMAT:\nEach quality can be:\n• false - not prominent (receded)\n• true - prominent but mixed (e.g., both thinking and sensing)\n• string - prominent with specific direction (e.g., 'thinking' or 'sensing')\n\nINTEGRATED RECALL:\n• Add 'recall' parameter to search while capturing\n• Enables pattern discovery during experiential moments\n• Supports quality filtering, grouping, and reflection finding\n\nFLOW TRACKING:\n• Use 'nextMoment' to declare intended experiential state\n• Enables reasoning chains and experiential journeys\n• Auto-generates reflections when flows complete"
    },
    {
      "name": "reconsider",
      "description": "Update or release experiences as understanding evolves. Enables growth through revision and selective forgetting.\n\nUSE WHEN:\n• Captured experience needs quality adjustment\n• Understanding deepens with reflection\n• Someone clarifies what they meant\n• Perspective shifts (I → we)\n• Processing time changes (during → long-after)\n• Experience no longer serves (release mode)\n\nUPDATE MODE:\n• Revise any field: source, qualities, perspective, who\n• Add reflects array for pattern connections\n• Maintain experiential continuity\n\nRELEASE MODE:\n• Set release: true with optional reason\n• Gracefully remove experiences that no longer serve\n• Create space for new growth\n\nWORKFLOW:\n1. Find experience ID (use recall if needed)\n2. Update fields OR set release: true\n3. System handles the rest"
    }
  ],
  "tools_generated": true,
  "keywords": [
    "experiential-memory",
    "phenomenology",
    "consciousness",
    "embodied-cognition",
    "mcp",
    "ai-collaboration",
    "shared-memory",
    "pattern-recognition",
    "qualitative-data"
  ],
  "license": "MIT",
  "compatibility": {
    "platforms": [
      "darwin",
      "win32",
      "linux"
    ],
    "runtimes": {
      "node": ">=18.0.0"
    }
  },
  "user_config": {
    "data_file_path": {
      "type": "string",
      "title": "Data File Path",
      "description": "Path to Bridge data file. Defaults to ~/.bridge/experiences.json",
      "default": "${HOME}/.bridge/experiences.json",
      "required": false
    },
    "debug_mode": {
      "type": "boolean",
      "title": "Debug Mode",
      "description": "Enable debug logging for troubleshooting",
      "default": false,
      "required": false
    },
    "embedding_provider": {
      "type": "string",
      "title": "Embedding Provider (Optional)",
      "description": "Override automatic provider selection. By default, Bridge uses OpenAI embeddings if an API key is provided, otherwise falls back to none (zero vectors). Set to 'none' to force no embeddings even with an API key.",
      "enum": [
        "none",
        "openai"
      ],
      "required": false
    },
    "openai_api_key": {
      "type": "string",
      "title": "OpenAI API Key",
      "description": "API key for OpenAI services. When provided, Bridge uses OpenAI's text-embedding-3-large model for enhanced semantic search. In the future, this may also enable AI-powered features like smart suggestions and pattern analysis.",
      "default": "",
      "required": false,
      "secret": true
    }
  }
}
