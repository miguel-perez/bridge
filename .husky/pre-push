#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🚀 Running pre-push quality checks..."

# Check if we're in a CI environment (skip some checks)
if [ "$CI" = "true" ]; then
    echo "⚠️  CI environment detected, skipping pre-push checks"
    exit 0
fi

# Check if user wants to bypass (with permission)
if [ "$SKIP_PRE_PUSH" = "true" ]; then
    echo "⚠️  Pre-push checks bypassed (SKIP_PRE_PUSH=true)"
    echo "   This should only be used in emergencies with explicit permission!"
    exit 0
fi

# Function to handle errors
handle_error() {
    echo "❌ Pre-push check failed: $1"
    echo ""
    echo "💡 To bypass this check (emergency only):"
    echo "   SKIP_PRE_PUSH=true git push"
    echo ""
    echo "💡 To fix the issues:"
    echo "   npm run lint:fix    # Fix linting issues"
    echo "   npm test           # Run tests"
    echo "   npm run test:all   # Run all tests and learning loop"
    echo "   npm run build      # Build project"
    exit 1
}

# 1. Type checking
echo "📝 Checking TypeScript types..."
npm run type-check || handle_error "TypeScript type checking failed"

# 2. Linting
echo "🧹 Running ESLint..."
npm run lint || handle_error "ESLint found issues"

# 3. Markdown linting
echo "📖 Checking markdown files..."
npm run lint:md || handle_error "Markdown linting failed"

# 4. Build verification
echo "🔨 Building project..."
npm run build || handle_error "Build failed"

# 5. Unit tests with coverage
echo "🧪 Running unit tests with coverage..."
npm run test:coverage || handle_error "Unit tests failed"

# 6. All integration tests (more comprehensive)
echo "🔗 Running all integration tests..."
npm run test:bridge || handle_error "Integration tests failed"

# 7. Learning loop analysis (optional but recommended)
echo "🧠 Running learning loop analysis..."
npm run loop || echo "⚠️  Learning loop analysis failed (continuing anyway)"

echo "✅ All pre-push checks passed!"
echo "🚀 Ready to push!" 